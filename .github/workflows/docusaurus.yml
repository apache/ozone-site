# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Builds the website and runs tests using Docker.
# The Docker image contains only pnpm prod dependencies, so it is cached.
# The website build is stored as an artifact.

name: docusaurus

on:
  workflow_call:

concurrency:
  group: docusaurus-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  script_dir: .github/scripts
  image_tar: ozone-site-image.tar

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v4
    - name: Check Docker image cache
      id: cache
      uses: actions/cache@v4
      with:
        path: ${{ env.image_tar }}
        key: image-${{ hashFiles('Dockerfile', 'compose.yml', 'pnpm-lock.yaml') }}
        lookup-only: true
    - name: Build Docker image
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        docker compose build
    - name: Save docker image to tar
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        docker save ozone-site --output="${{ env.image_tar }}"
    - name: Save docker image tar to cache
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ env.image_tar }}
        key: image-${{ hashFiles('Dockerfile', 'compose.yml', 'pnpm-lock.yaml') }}
  build-website:
    needs:
    - build-image
    runs-on: ubuntu-latest
    steps:
    - name: Checkout project
      uses: actions/checkout@v4
    - name: Restore docker image tar from cache
      uses: actions/cache/restore@v4
      with:
        path: ${{ env.image_tar }}
        key: image-${{ hashFiles('Dockerfile', 'compose.yml', 'pnpm-lock.yaml') }}
    - name: Load docker image
      run: |
        docker load --input="${{ env.image_tar }}"
    - name: Build website
      run: |
        docker compose run site pnpm build
    - name: Save website build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build
        path: build
        if-no-files-found: error
        retention-days: 1
  run-website:
    needs:
    - build-website
    runs-on: ubuntu-latest
    steps:
    - name: Get Docker files
      uses: actions/checkout@v4
    - name: Download website build artifact
      uses: actions/download-artifact@v4
      with:
        name: build
        path: build
    - name: Restore docker image tar from cache
      uses: actions/cache/restore@v4
      with:
        path: ${{ env.image_tar }}
        key: image-${{ hashFiles('Dockerfile', 'compose.yml', 'pnpm-lock.yaml') }}
    - name: Load docker image
      run: |
        docker load --input="${{ env.image_tar }}"
    - name: Curl website homepage
      timeout-minutes: 5
      working-directory: ${{ env.script_dir }}
      run: |
        ./curl.sh
